{"version":3,"sources":["webpack:///./src/components/installer/items/User.vue?68de","webpack:///src/components/installer/items/User.vue","webpack:///./src/components/installer/items/User.vue?8686","webpack:///./src/components/installer/items/User.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","item","slot","_v","staticClass","_e","class","directives","name","rawName","value","newUser","expression","domProps","on","$event","target","composing","$set","preventDefault","attemptCreateUser","staticRenderFns","components","DeviseInstallerItem","props","type","Boolean","required","data","email","password","password_confirmation","methods","createUser","then","component"],"mappings":"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","file":"js/chunk-2d0b23c8.3fa5f60a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('devise-installer-item',{attrs:{\"id\":\"nav-user\",\"item\":_vm.item,\"title\":\"First Administration User (required)\"}},[_c('template',{slot:\"instructions\"},[_c('p',[_vm._v(\"You need to update the User.php model to add the HasPermissions trait\")]),_c('p',[_vm._v(\" Also, for the first user to login you will need to create a user. You can either enter one directly into the database manually or add one using the form to the right. \")])]),_c('template',{slot:\"example\"},[_c('h3',{staticClass:\"dvs-mb-4\"},[_vm._v(\"Add HasPermissions trait to the User model\")]),_c('div',{staticClass:\"dvs-mb-8\"},[_c('pre',{staticClass:\"lang-php line-numbers\"},[_vm._v(\"        \"),_c('code',[_vm._v(\"\\n        <?php\\n        namespace App;\\n        use Illuminate\\\\Notifications\\\\Notifiable;\\n        use Illuminate\\\\Contracts\\\\Auth\\\\MustVerifyEmail;\\n        use Illuminate\\\\Foundation\\\\Auth\\\\User as Authenticatable;\\n        use Devise\\\\Traits\\\\HasPermissions;\\n\\n        class User extends Authenticatable\\n        {\\n          use Notifiable, HasPermissions;\\n\\n          protected $appends = [\\n            'permissions_list'\\n          ];\\n\\n          /**\\n          * The attributes that are mass assignable.\\n          *\\n          * @var array\\n          */\\n          protected $fillable = [\\n            'name', 'email', 'password',\\n          ];\\n\\n          /**\\n          * The attributes that should be hidden for arrays.\\n          *\\n          * @var array\\n          */\\n          protected $hidden = [\\n            'password', 'remember_token',\\n          ];\\n        }\\n        \")]),_vm._v(\"\\n      \")])]),_c('h3',{staticClass:\"dvs-mb-4\"},[_vm._v(\" Create Your first User \"),(_vm.item)?[_vm._v(\"(Already Created)\")]:_vm._e()],2),_c('form',{class:{ 'dvs-opacity-50': _vm.item }},[_c('fieldset',{staticClass:\"dvs-fieldset dvs-mb-4\"},[_c('label',[_vm._v(\"Name\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newUser.name),expression:\"newUser.name\"}],attrs:{\"type\":\"text\",\"disabled\":_vm.item},domProps:{\"value\":(_vm.newUser.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.newUser, \"name\", $event.target.value)}}})]),_c('fieldset',{staticClass:\"dvs-fieldset dvs-mb-4\"},[_c('label',[_vm._v(\"Email\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newUser.email),expression:\"newUser.email\"}],attrs:{\"type\":\"email\",\"disabled\":_vm.item},domProps:{\"value\":(_vm.newUser.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.newUser, \"email\", $event.target.value)}}})]),_c('fieldset',{staticClass:\"dvs-fieldset dvs-mb-6\"},[_c('label',[_vm._v(\"Password\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newUser.password),expression:\"newUser.password\"}],attrs:{\"type\":\"text\",\"disabled\":_vm.item},domProps:{\"value\":(_vm.newUser.password)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.newUser, \"password\", $event.target.value)}}})]),_c('fieldset',{staticClass:\"dvs-fieldset dvs-mb-6\"},[_c('label',[_vm._v(\"Confirm Password\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newUser.password_confirmation),expression:\"newUser.password_confirmation\"}],attrs:{\"type\":\"text\",\"disabled\":_vm.item},domProps:{\"value\":(_vm.newUser.password_confirmation)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.newUser, \"password_confirmation\", $event.target.value)}}})]),_c('button',{staticClass:\"dvs-btn dvs-bg-green-500 dvs-text-white\",attrs:{\"disabled\":_vm.item},on:{\"click\":function($event){$event.preventDefault();return _vm.attemptCreateUser()}}},[_vm._v(\" Create User \")])])])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <devise-installer-item id=\"nav-user\" :item=\"item\" title=\"First Administration User (required)\">\n    <template slot=\"instructions\">\n      <p>You need to update the User.php model to add the HasPermissions trait</p>\n      <p>\n        Also, for the first user to login you will need to create a user. You can either enter one\n        directly into the database manually or add one using the form to the right.\n      </p>\n    </template>\n\n    <template slot=\"example\">\n      <h3 class=\"dvs-mb-4\">Add HasPermissions trait to the User model</h3>\n      <div class=\"dvs-mb-8\">\n        <pre class=\"lang-php line-numbers\">\n          <code>\n          &lt;?php\n          namespace App;\n          use Illuminate\\Notifications\\Notifiable;\n          use Illuminate\\Contracts\\Auth\\MustVerifyEmail;\n          use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n          use Devise\\Traits\\HasPermissions;\n\n          class User extends Authenticatable\n          {\n            use Notifiable, HasPermissions;\n\n            protected $appends = [\n              'permissions_list'\n            ];\n\n            /**\n            * The attributes that are mass assignable.\n            *\n            * @var array\n            */\n            protected $fillable = [\n              'name', 'email', 'password',\n            ];\n\n            /**\n            * The attributes that should be hidden for arrays.\n            *\n            * @var array\n            */\n            protected $hidden = [\n              'password', 'remember_token',\n            ];\n          }\n          </code>\n        </pre>\n      </div>\n\n      <h3 class=\"dvs-mb-4\">\n        Create Your first User\n        <template v-if=\"item\">(Already Created)</template>\n      </h3>\n      <form :class=\"{ 'dvs-opacity-50': item }\">\n        <fieldset class=\"dvs-fieldset dvs-mb-4\">\n          <label>Name</label>\n          <input v-model=\"newUser.name\" type=\"text\" :disabled=\"item\" />\n        </fieldset>\n        <fieldset class=\"dvs-fieldset dvs-mb-4\">\n          <label>Email</label>\n          <input v-model=\"newUser.email\" type=\"email\" :disabled=\"item\" />\n        </fieldset>\n        <fieldset class=\"dvs-fieldset dvs-mb-6\">\n          <label>Password</label>\n          <input v-model=\"newUser.password\" type=\"text\" :disabled=\"item\" />\n        </fieldset>\n        <fieldset class=\"dvs-fieldset dvs-mb-6\">\n          <label>Confirm Password</label>\n          <input v-model=\"newUser.password_confirmation\" type=\"text\" :disabled=\"item\" />\n        </fieldset>\n        <button\n          class=\"dvs-btn dvs-bg-green-500 dvs-text-white\"\n          :disabled=\"item\"\n          @click.prevent=\"attemptCreateUser()\"\n        >\n          Create User\n        </button>\n      </form>\n    </template>\n  </devise-installer-item>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  components: {\n    DeviseInstallerItem: () => import('../Item.vue'),\n  },\n\n  props: {\n    item: {\n      type: Boolean,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      newUser: {\n        name: '',\n        email: '',\n        password: '',\n        password_confirmation: '',\n      },\n    }\n  },\n  methods: {\n    ...mapActions('devise', ['createUser', 'login']),\n    attemptCreateUser() {\n      this.createUser(this.newUser).then(() => {\n        this.login(this.newUser)\n      })\n    },\n  },\n}\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./User.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./User.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./User.vue?vue&type=template&id=6920cb84&\"\nimport script from \"./User.vue?vue&type=script&lang=js&\"\nexport * from \"./User.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}