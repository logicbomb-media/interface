{"version":3,"sources":["webpack:///./src/components/meta/Manage.vue?b220","webpack:///src/components/meta/Manage.vue","webpack:///./src/components/meta/Manage.vue?b829","webpack:///./src/components/meta/Manage.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","scopedSlots","_u","key","fn","_v","staticClass","proxy","on","requestCreateMeta","requestUpdateMeta","requestDeleteMeta","model","value","localValue","callback","$$v","$set","expression","staticRenderFns","name","components","MetaForm","AdminContainer","data","modulesToLoad","computed","mounted","retrieveAllMeta","methods","createMeta","newMeta","updateMeta","meta","then","edit","deleteMeta","getMeta","self","Object","assign","map","window","deviseSettings","$bus","$emit","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,kBAAkB,CAACE,YAAYN,EAAIO,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,WAAW,MAAO,CAACT,EAAIU,GAAG,6KAA6KN,EAAG,OAAO,CAACO,YAAY,kBAAkB,CAACX,EAAIU,GAAG,YAAYV,EAAIU,GAAG,YAAYN,EAAG,SAAS,CAACJ,EAAIU,GAAG,SAASV,EAAIU,GAAG,cAAcE,OAAM,GAAM,CAACJ,IAAI,UAAUC,GAAG,WAAW,MAAO,CAACL,EAAG,YAAY,CAACO,YAAY,WAAWE,GAAG,CAAC,sBAAsBb,EAAIc,kBAAkB,sBAAsBd,EAAIe,kBAAkB,sBAAsBf,EAAIgB,mBAAmBC,MAAM,CAACC,MAAOlB,EAAImB,WAAe,KAAEC,SAAS,SAAUC,GAAMrB,EAAIsB,KAAKtB,EAAImB,WAAY,OAAQE,IAAME,WAAW,uBAAuBX,OAAM,QAC70BY,EAAkB,G,kECqBtB,GACEC,KAAM,aAENC,WAAY,CACVC,SAAU,WAAd,wDACIC,eAAgB,WAApB,yDAGEC,KARF,WASI,MAAO,CACLV,WAAY,CACVU,KAAM,IAERC,cAAe,IAInBC,SAAU,OAAZ,OAAY,CAAZ,GACA,mCAGEC,QArBF,WAsBI/B,KAAKgC,mBAEPC,QAAS,OAAX,OAAW,CAAX,kBACA,6EADA,IAEIpB,kBAFJ,SAEA,GACMb,KAAKkC,WAAWC,IAElBrB,kBALJ,SAKA,GACMd,KAAKoC,WAAWC,GAAMC,MAAK,WACzBD,EAAKE,MAAO,MAGhBxB,kBAVJ,SAUA,GACMf,KAAKwC,WAAWH,IAElBL,gBAbJ,WAcM,IAAN,OACMhC,KAAKyC,UAAUH,MAAK,WAClBI,EAAKxB,WAAayB,OAAOC,OAAO,GAAIF,EAAKxB,WAAYwB,EAAKL,MAG1DK,EAAKxB,WAAWU,KAAKiB,KAAI,SAAjC,GACUH,EAAKrB,KAAKgB,EAAM,QAAQ,MAE1BS,OAAOC,eAAeC,KAAKC,MAAM,mBAAoBP,EAAKb,sBCpE6R,I,YCO3VqB,EAAY,eACd,EACApD,EACAyB,GACA,EACA,KACA,KACA,MAIa,aAAA2B,E","file":"js/chunk-2d21f819.e07abe27.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('admin-container',{scopedSlots:_vm._u([{key:\"message\",fn:function(){return [_vm._v(\" Global Meta are the meta tags that will be attached to every page of this site. They can be overridden on a page level but this gives you to the opportunity to set the \"),_c('span',{staticClass:\"dvs-fonts-mono\"},[_vm._v(\"<meta>\")]),_vm._v(\" across \"),_c('strong',[_vm._v(\"all\")]),_vm._v(\" pages. \")]},proxy:true},{key:\"content\",fn:function(){return [_c('meta-form',{staticClass:\"dvs-mt-8\",on:{\"request-create-meta\":_vm.requestCreateMeta,\"request-update-meta\":_vm.requestUpdateMeta,\"request-delete-meta\":_vm.requestDeleteMeta},model:{value:(_vm.localValue.data),callback:function ($$v) {_vm.$set(_vm.localValue, \"data\", $$v)},expression:\"localValue.data\"}})]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <admin-container>\n    <template v-slot:message>\n      Global Meta are the meta tags that will be attached to every page of this site. They can be\n      overridden on a page level but this gives you to the opportunity to set the\n      <span class=\"dvs-fonts-mono\">&lt;meta&gt;</span> across <strong>all</strong> pages.\n    </template>\n    <template v-slot:content>\n      <meta-form\n        v-model=\"localValue.data\"\n        class=\"dvs-mt-8\"\n        @request-create-meta=\"requestCreateMeta\"\n        @request-update-meta=\"requestUpdateMeta\"\n        @request-delete-meta=\"requestDeleteMeta\"\n      />\n    </template>\n  </admin-container>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\n\nexport default {\n  name: 'MetaManage',\n\n  components: {\n    MetaForm: () => import('./MetaForm'),\n    AdminContainer: () => import('../admin/ui/AdminContainer'),\n  },\n\n  data() {\n    return {\n      localValue: {\n        data: [],\n      },\n      modulesToLoad: 1,\n    }\n  },\n\n  computed: {\n    ...mapGetters('devise', ['meta']),\n  },\n\n  mounted() {\n    this.retrieveAllMeta()\n  },\n  methods: {\n    ...mapActions('devise', ['getMeta', 'createMeta', 'updateMeta', 'deleteMeta']),\n    requestCreateMeta(newMeta) {\n      this.createMeta(newMeta)\n    },\n    requestUpdateMeta(meta) {\n      this.updateMeta(meta).then(() => {\n        meta.edit = false\n      })\n    },\n    requestDeleteMeta(meta) {\n      this.deleteMeta(meta)\n    },\n    retrieveAllMeta() {\n      const self = this\n      this.getMeta().then(() => {\n        self.localValue = Object.assign({}, self.localValue, self.meta)\n\n        /* eslint-disable array-callback-return */\n        self.localValue.data.map((meta) => {\n          self.$set(meta, 'edit', false)\n        })\n        window.deviseSettings.$bus.$emit('incrementLoadbar', self.modulesToLoad)\n      })\n    },\n  },\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=dd7a4618&\"\nimport script from \"./Manage.vue?vue&type=script&lang=js&\"\nexport * from \"./Manage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}