{"version":3,"sources":["webpack:///./src/components/installer/items/ImageOptimization.vue?4e0d","webpack:///src/components/installer/items/ImageOptimization.vue","webpack:///./src/components/installer/items/ImageOptimization.vue?8e32","webpack:///./src/components/installer/items/ImageOptimization.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","checklist","image_optimization","jpegoptim","optipng","pngquant","svgo","gifsicle","slot","_v","staticClass","staticRenderFns","components","DeviseInstallerItem","props","type","Boolean","required","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,wBAAwB,CAACE,MAAM,CAAC,GAAK,yBAAyB,KAAON,EAAIO,UAAUC,mBAAmBC,WACrMT,EAAIO,UAAUC,mBAAmBE,SACjCV,EAAIO,UAAUC,mBAAmBG,UACjCX,EAAIO,UAAUC,mBAAmBI,MACjCZ,EAAIO,UAAUC,mBAAmBK,SAAS,MAAQ,kCAAkC,CAACT,EAAG,WAAW,CAACU,KAAK,gBAAgB,CAACV,EAAG,IAAI,CAACJ,EAAIe,GAAG,yYAAyYX,EAAG,WAAW,CAACU,KAAK,WAAW,CAACV,EAAG,KAAK,CAACY,YAAY,YAAY,CAAChB,EAAIe,GAAG,mBAAmBX,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,mBAAmB,OAAS,WAAW,CAACN,EAAIe,GAAG,cAAcf,EAAIe,GAAG,QAAQX,EAAG,IAAI,CAACJ,EAAIe,GAAG,mDAAmDX,EAAG,MAAM,CAACY,YAAY,YAAYV,MAAM,CAAC,aAAa,MAAM,CAACN,EAAIe,GAAG,kBAAkBX,EAAG,OAAO,CAACJ,EAAIe,GAAG,qNAAqNf,EAAIe,GAAG,oBAAoBX,EAAG,KAAK,CAACY,YAAY,YAAY,CAAChB,EAAIe,GAAG,YAAYX,EAAG,IAAI,CAACJ,EAAIe,GAAG,mDAAmDX,EAAG,MAAM,CAACY,YAAY,YAAYV,MAAM,CAAC,aAAa,MAAM,CAACN,EAAIe,GAAG,kBAAkBX,EAAG,OAAO,CAACJ,EAAIe,GAAG,4PAA4Pf,EAAIe,GAAG,uBAAuB,IACnmDE,EAAkB,GCiDtB,G,8BAAA,CACEC,WAAY,CACVC,oBAAqB,WAAzB,yDAEEC,MAAO,CACLb,UAAW,CACTc,KAAMC,QACNC,UAAU,MC7DyW,I,YCOrXC,EAAY,eACd,EACAzB,EACAkB,GACA,EACA,KACA,KACA,MAIa,aAAAO,E","file":"js/chunk-2d22c913.5b0c537f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('devise-installer-item',{attrs:{\"id\":\"nav-image-optimization\",\"item\":_vm.checklist.image_optimization.jpegoptim ||\n    _vm.checklist.image_optimization.optipng ||\n    _vm.checklist.image_optimization.pngquant ||\n    _vm.checklist.image_optimization.svgo ||\n    _vm.checklist.image_optimization.gifsicle,\"title\":\"Image Optimization (Optional)\"}},[_c('template',{slot:\"instructions\"},[_c('p',[_vm._v(\" When images are uploaded to the media manager nothing happens. We store the highest resolution image we can. However, when a user select's an image when populating content Devise will attempt to optimize the image by running a series of optimizations depending on file type. These are not required but you can greatly increase the performance for end-users by having these installed. \")])]),_c('template',{slot:\"example\"},[_c('h3',{staticClass:\"dvs-mb-4\"},[_vm._v(\" Mac OS (using \"),_c('a',{attrs:{\"href\":\"https://brew.sh/\",\"target\":\"_blank\"}},[_vm._v(\"Homebrew\")]),_vm._v(\") \")]),_c('p',[_vm._v(\"On the command line run the following command\")]),_c('pre',{staticClass:\"lang-bash\",attrs:{\"data-start\":\"1\"}},[_vm._v(\"              \"),_c('code',[_vm._v(\"\\n                brew install jpegoptim\\n                brew install optipng\\n                brew install pngquant\\n                brew install svgo\\n                brew install gifsicle\\n              \")]),_vm._v(\"\\n            \")]),_c('h3',{staticClass:\"dvs-mb-4\"},[_vm._v(\"Ubuntu\")]),_c('p',[_vm._v(\"On the command line run the following command\")]),_c('pre',{staticClass:\"lang-bash\",attrs:{\"data-start\":\"1\"}},[_vm._v(\"              \"),_c('code',[_vm._v(\"\\n                sudo apt-get install jpegoptim\\n                sudo apt-get install optipng\\n                sudo apt-get install pngquant\\n                sudo npm install -g svgo\\n                sudo apt-get install gifsicle\\n              \")]),_vm._v(\"\\n            \")])])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <devise-installer-item\n    id=\"nav-image-optimization\"\n    :item=\"\n      checklist.image_optimization.jpegoptim ||\n      checklist.image_optimization.optipng ||\n      checklist.image_optimization.pngquant ||\n      checklist.image_optimization.svgo ||\n      checklist.image_optimization.gifsicle\n    \"\n    title=\"Image Optimization (Optional)\"\n  >\n    <template slot=\"instructions\">\n      <p>\n        When images are uploaded to the media manager nothing happens. We store the highest\n        resolution image we can. However, when a user select's an image when populating content\n        Devise will attempt to optimize the image by running a series of optimizations depending on\n        file type. These are not required but you can greatly increase the performance for end-users\n        by having these installed.\n      </p>\n    </template>\n\n    <template slot=\"example\">\n      <h3 class=\"dvs-mb-4\">\n        Mac OS (using\n        <a href=\"https://brew.sh/\" target=\"_blank\">Homebrew</a>)\n      </h3>\n      <p>On the command line run the following command</p>\n      <pre class=\"lang-bash\" data-start=\"1\">\n                <code>\n                  brew install jpegoptim\n                  brew install optipng\n                  brew install pngquant\n                  brew install svgo\n                  brew install gifsicle\n                </code>\n              </pre>\n\n      <h3 class=\"dvs-mb-4\">Ubuntu</h3>\n      <p>On the command line run the following command</p>\n      <pre class=\"lang-bash\" data-start=\"1\">\n                <code>\n                  sudo apt-get install jpegoptim\n                  sudo apt-get install optipng\n                  sudo apt-get install pngquant\n                  sudo npm install -g svgo\n                  sudo apt-get install gifsicle\n                </code>\n              </pre>\n    </template>\n  </devise-installer-item>\n</template>\n\n<script>\nexport default {\n  components: {\n    DeviseInstallerItem: () => import('../Item.vue'),\n  },\n  props: {\n    checklist: {\n      type: Boolean,\n      required: true,\n    },\n  },\n}\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageOptimization.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageOptimization.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImageOptimization.vue?vue&type=template&id=1496398f&\"\nimport script from \"./ImageOptimization.vue?vue&type=script&lang=js&\"\nexport * from \"./ImageOptimization.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}