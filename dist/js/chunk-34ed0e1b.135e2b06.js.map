{"version":3,"sources":["webpack:///./node_modules/query-string/node_modules/strict-uri-encode/index.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/filter-obj/index.js","webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/split-on-first/index.js"],"names":["module","exports","str","encodeURIComponent","replace","x","charCodeAt","toString","toUpperCase","strictUriEncode","decodeComponent","splitOnFirst","filterObject","isNullOrUndefined","value","undefined","encoderForArrayFormat","options","arrayFormat","key","result","index","length","skipNull","skipEmptyString","encode","join","arrayFormatSeparator","parserForArrayFormat","accumulator","exec","concat","isArray","includes","isEncodedArray","decode","newValue","split","map","item","validateArrayFormatSeparator","TypeError","strict","keysSorter","input","Array","sort","Object","keys","a","b","Number","removeHash","hashStart","indexOf","slice","getHash","url","hash","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","query","assign","formatter","ret","create","param","k","reduce","Boolean","stringify","object","shouldFilter","objectCopy","filter","parseUrl","url_","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","pick","exclude","exclusionFilter","obj","predicate","isArr","i","val","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","err","left","right","prototype","call","tokens","match","customDecodeURIComponent","replaceMap","entries","encodedURI","string","separator","separatorIndex"],"mappings":"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","file":"js/chunk-34ed0e1b.135e2b06.js","sourcesContent":["'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n"],"sourceRoot":""}